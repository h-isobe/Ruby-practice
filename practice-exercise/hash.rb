## 1:rubyのハッシュでキー一覧を取得する
hashs = { "像" => 5, "ライオン" => 6, "トラ" => 7 }
p hashs.keys
#=> ["像", "ライオン", "トラ"]


## 2:rubyのハッシュで値の一覧を取得する
hashs = { "像" => 2, "ライオン" => 5, "トラ" => 9 }
p hashs.values
#=> [2, 5, 9]


## 3:rubyのハッシュで指定条件で値を取得する
prices = { "ほうれん草" => 150, "じゃがいも" => 190, "牛肉" => 200,"ねぎ"=> 100}
p prices.delete_if { |keys, values| values < 180 }
#=> {"じゃがいも"=>190, "牛肉"=>200}


## 4:rubyのハッシュでキーを取り出す
hash = {"hash" => 1}
p hash.key?(:hash) 
#=> false
p hash.key?("hash")
#=> true
# キーを取得する際は文字列は文字列で、シンボルはシンボルで指定


## 5:rubyのハッシュで値を取り出す
hash = {:hash => "値"}
p hash.value?("値")
#=> true


## 6:rubyのハッシュで値を操作する
price = { :orange => 150, :apple => 160, :peach => 190}
price[:peach] = 200
p [:peach]


## 7:rubyのハッシュを配列化する
names = { "山田" => 170, "砂糖" => 190, "安田" => 200}
p names.to_a
#=> [["山田", 170], ["砂糖", 190], ["安田", 200]]


## 8:rubyのハッシュから値を取得して配列化する
names = { "山田" => 170, "砂糖" => 190, "安田" => 200}
p names.values?
#=> [170, 190, 200]


## 9:rubyの配列からハッシュ化する
array = [["りんご", 200], ["マンゴー", 140], ["ぶどう", 200]]
p array.to_h
#=> {"りんご"=>200, "マンゴー"=>140, "ぶどう"=>200}


## 10:rubyのハッシュを生成する
p a:1,b:2 
#=> {:a=>1, :b=>2}
# 一般的な生成の方法ではない。。


## 11:rubyのハッシュを結合する
hash1 = { :key1 => "メモ１", :key2 => "メモ2" }
hash2 = { :key3 => "メモ3"}
p hash3 = hash1.merge(hash2)
#=> {:key1=>"メモ１", :key2=>"メモ2", :key3=>"メモ3"}


## 12:rubyのハッシュを実行する
hash1 = { :key1 => "メモ１", :key2 => "メモ2" }

hash1.merge(:key3 => "メモ3")
p hash1
#=> {:key1=>"メモ１", :key2=>"メモ2"} (mergeメソッドは非破壊的メソッドの為)